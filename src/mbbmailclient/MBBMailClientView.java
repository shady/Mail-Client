/*
 * MBBMailClientView.java
 */

package mbbmailclient;

import java.awt.Color;
import java.util.Observable;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.text.BadLocationException;
import java.util.Observer;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.text.Style;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyledDocument;

/**
 * The application's main frame.
 */
public class MBBMailClientView extends JFrame implements Observer {
    private Model model;
    private Settings settingsbox;

    public MBBMailClientView(Model model) {
        this.model = model;

        model.addObserver(this);
        initComponents();
        updateView();
    }

    public void showAboutBox() {
        if (aboutBox == null) {
            JFrame mainFrame = MBBMailClientApp.getApplication().getMainFrame();
            aboutBox = new MBBMailClientAboutBox(mainFrame);
            aboutBox.setLocationRelativeTo(mainFrame);
        }
        MBBMailClientApp.getApplication().show(aboutBox);
    }

    public void showSetings() {
        if (settingsbox == null) {
            settingsbox = new Settings(this);
            settingsbox.setLocationRelativeTo(this.getContentPane());
        }
        MBBMailClientApp.getApplication().show(settingsbox);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        mailList = new javax.swing.JList();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        connectButton = new javax.swing.JButton();
        disconnectButton = new javax.swing.JButton();
        openButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        unmarkDeleted = new javax.swing.JButton();
        statButton = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        mailText = new javax.swing.JTextArea();
        jScrollPane5 = new javax.swing.JScrollPane();
        statusLog = new javax.swing.JTextPane();
        menuBar = new javax.swing.JMenuBar();
        javax.swing.JMenu fileMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem exitMenuItem = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        javax.swing.JMenu helpMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem aboutMenuItem = new javax.swing.JMenuItem();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();

        mainPanel.setName("mainPanel"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(mbbmailclient.MBBMailClientApp.class).getContext().getResourceMap(MBBMailClientView.class);
        jPanel1.setBackground(resourceMap.getColor("jPanel1.background")); // NOI18N
        jPanel1.setName("jPanel1"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        mailList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Not connected" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        mailList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        mailList.setEnabled(false);
        mailList.setName("mailList"); // NOI18N
        mailList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mailListMouseClicked(evt);
            }
        });
        mailList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                mailListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(mailList);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 739, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE)
        );

        jPanel2.setName("jPanel2"); // NOI18N

        jPanel3.setName("jPanel3"); // NOI18N
        jPanel3.setLayout(new java.awt.GridLayout(1, 0, 10, 0));

        connectButton.setText(resourceMap.getString("connectButton.text")); // NOI18N
        connectButton.setName("connectButton"); // NOI18N
        connectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connectButtonActionPerformed(evt);
            }
        });
        jPanel3.add(connectButton);

        disconnectButton.setText(resourceMap.getString("disconnectButton.text")); // NOI18N
        disconnectButton.setName("disconnectButton"); // NOI18N
        disconnectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                disconnectButtonActionPerformed(evt);
            }
        });
        jPanel3.add(disconnectButton);

        openButton.setText(resourceMap.getString("openButton.text")); // NOI18N
        openButton.setName("openButton"); // NOI18N
        openButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openButtonActionPerformed(evt);
            }
        });
        jPanel3.add(openButton);

        deleteButton.setText(resourceMap.getString("deleteButton.text")); // NOI18N
        deleteButton.setName("deleteButton"); // NOI18N
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });
        jPanel3.add(deleteButton);

        unmarkDeleted.setText(resourceMap.getString("unmarkDeleted.text")); // NOI18N
        unmarkDeleted.setName("unmarkDeleted"); // NOI18N
        unmarkDeleted.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unmarkDeletedActionPerformed(evt);
            }
        });
        jPanel3.add(unmarkDeleted);

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(mbbmailclient.MBBMailClientApp.class).getContext().getActionMap(MBBMailClientView.class, this);
        statButton.setAction(actionMap.get("sendStat")); // NOI18N
        statButton.setText(resourceMap.getString("statButton.text")); // NOI18N
        statButton.setName("statButton"); // NOI18N
        statButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statButtonActionPerformed(evt);
            }
        });
        jPanel3.add(statButton);

        jPanel4.setName("jPanel4"); // NOI18N

        jPanel5.setName("jPanel5"); // NOI18N

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        jSeparator1.setName("jSeparator1"); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 609, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addContainerGap())
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 739, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(2, 2, 2)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel6.setName("jPanel6"); // NOI18N
        jPanel6.setLayout(new java.awt.GridLayout(1, 0, 7, 0));

        jScrollPane3.setName("jScrollPane3"); // NOI18N

        mailText.setColumns(20);
        mailText.setRows(5);
        mailText.setName("mailText"); // NOI18N
        jScrollPane3.setViewportView(mailText);

        jPanel6.add(jScrollPane3);

        jScrollPane5.setName("jScrollPane5"); // NOI18N

        statusLog.setBackground(resourceMap.getColor("statusLog.background")); // NOI18N
        statusLog.setContentType(resourceMap.getString("statusLog.contentType")); // NOI18N
        statusLog.setName("statusLog"); // NOI18N
        jScrollPane5.setViewportView(statusLog);

        jPanel6.add(jScrollPane5);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 739, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, 329, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 739, Short.MAX_VALUE)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, mainPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        menuBar.setName("menuBar"); // NOI18N

        fileMenu.setText(resourceMap.getString("fileMenu.text")); // NOI18N
        fileMenu.setName("fileMenu"); // NOI18N

        exitMenuItem.setAction(actionMap.get("quit")); // NOI18N
        exitMenuItem.setName("exitMenuItem"); // NOI18N
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        jMenu1.setText(resourceMap.getString("jMenu1.text")); // NOI18N
        jMenu1.setName("jMenu1"); // NOI18N

        jMenuItem1.setAction(actionMap.get("showSetings")); // NOI18N
        jMenuItem1.setText(resourceMap.getString("jMenuItem1.text")); // NOI18N
        jMenuItem1.setName("jMenuItem1"); // NOI18N
        jMenu1.add(jMenuItem1);

        menuBar.add(jMenu1);

        helpMenu.setText(resourceMap.getString("helpMenu.text")); // NOI18N
        helpMenu.setName("helpMenu"); // NOI18N

        aboutMenuItem.setAction(actionMap.get("showAboutBox")); // NOI18N
        aboutMenuItem.setName("aboutMenuItem"); // NOI18N
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setName("jTextArea1"); // NOI18N
        jScrollPane2.setViewportView(jTextArea1);

        jButton2.setText(resourceMap.getString("jButton2.text")); // NOI18N
        jButton2.setName("jButton2"); // NOI18N

        setComponent(mainPanel);
        setMenuBar(menuBar);
    }// </editor-fold>//GEN-END:initComponents

    private void disconnectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_disconnectButtonActionPerformed
        model.close(0);
        updateView();
}//GEN-LAST:event_disconnectButtonActionPerformed

    private void connectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connectButtonActionPerformed
        model.connect();
        updateView();
    }//GEN-LAST:event_connectButtonActionPerformed

    private void statButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statButtonActionPerformed
        model.top(0);
    }//GEN-LAST:event_statButtonActionPerformed

    private void openButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openButtonActionPerformed
        if (mailList.getSelectedIndex() != -1) {
            model.openMail(mailList.getSelectedIndex());
        }
    }//GEN-LAST:event_openButtonActionPerformed

    private void mailListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mailListMouseClicked

    }//GEN-LAST:event_mailListMouseClicked

    private void mailListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_mailListValueChanged

    }//GEN-LAST:event_mailListValueChanged

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        if (mailList.getSelectedIndex() != -1) {
            model.dele(0, mailList.getSelectedIndex());
        }        
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void unmarkDeletedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unmarkDeletedActionPerformed
        model.rset(0);
}//GEN-LAST:event_unmarkDeletedActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton connectButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton disconnectButton;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JList mailList;
    private javax.swing.JTextArea mailText;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JButton openButton;
    private javax.swing.JButton statButton;
    private javax.swing.JTextPane statusLog;
    private javax.swing.JButton unmarkDeleted;
    // End of variables declaration//GEN-END:variables


    private JDialog aboutBox;

    public void safeSetText(String t){
        //statusLog.setDocument((new HTMLEditorKit()).createDefaultDocument());
        //statusLog.setText("<html><body>" + t + "</html></body>");
        /*
        int len = statusLog.getStyledDocument().getLength();
        statusLog.setCaretPosition(len); // place caret at the end (with no selection)
        try {
            // place caret at the end (with no selection)
            statusLog.getStyledDocument().insertString(len, t, statusLog.getInputAttributes());
        } catch (BadLocationException ex) {
            Logger.getLogger(MBBMailClientView.class.getName()).log(Level.SEVERE, null, ex);
        }*/
        StyledDocument doc = statusLog.getStyledDocument();

        // Create a style object and then set the style attributes
        Style style = doc.addStyle("StyleName", null);
        if (t.indexOf("BLUECOLOR:") != -1) {
            StyleConstants.setForeground(style, Color.blue);
            t = t.replaceFirst("BLUECOLOR:", "");
        } else if (t.indexOf("GREENCOLOR:") != -1) {
            Color c = new Color(3, 192, 60);
            StyleConstants.setForeground(style, c);
            t = t.replaceFirst("GREENCOLOR:", "");
        } else if (t.indexOf("REDCOLOR:") != -1) {
            StyleConstants.setForeground(style, Color.red);
            t = t.replaceFirst("REDCOLOR:", "");
        }


        StyleConstants.setFontSize(style, 15);
        try {
            // Append to document
            doc.insertString(doc.getLength(), t, style);
        } catch (BadLocationException ex) {
            Logger.getLogger(MBBMailClientView.class.getName()).log(Level.SEVERE, null, ex);
        }
        statusLog.setCaretPosition(statusLog.getStyledDocument().getLength());
    }

    public void update(Observable o, Object arg) {
        if (arg != null && !arg.toString().equals("Status")) {
            updateView();
            mailText.setText(model.getMail());
        } else {
            safeSetText(model.getLatestLineStatusLog());
        }
        
    }

    private void updateView() {
        //0 = disconnected
        //1 = limbo
        //2 = connected
        if (model.getConnectedStatus() == 0) {
            connectButton.setEnabled(true);
            disconnectButton.setEnabled(false);
            statButton.setEnabled(false);
            mailList.setEnabled(false);
        } else if (model.getConnectedStatus() == 1) {
            connectButton.setEnabled(false);
            disconnectButton.setEnabled(false);
            statButton.setEnabled(false);
            mailList.setEnabled(false);
        } else if (model.getConnectedStatus() == 2) {
            connectButton.setEnabled(false);
            disconnectButton.setEnabled(true);
            statButton.setEnabled(true);
            mailList.setEnabled(true);
            mailList.setListData(model.getHeaderList());
        }
    }

    public void setSettings(String host, int port, String user, String pass) {
        model.setHostName(host);
        model.setPass(pass);
        model.setPort(port);
        model.setUser(user);
    }
}
